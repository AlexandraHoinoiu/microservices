version: "3.5"

services:

  api-gateway:
    container_name: api-gateway
    hostname: api.local
    build:
      context: .
      dockerfile: docker/api-gateway/Dockerfile
    ports:
      - 9900:80
    volumes:
      - ./api-gateway:/var/www
    networks:
      - microservices
#    extra_hosts:
#      - "home.local:172.19.0.7"
#      - "profile.local:172.19.0.7"
#      - "search.local:172.19.0.7"
#      - "controlpanel.local:172.19.0.7"

  home:
    container_name: home-service
    hostname: home.local
    build:
      context: .
      dockerfile: docker/home/Dockerfile
    ports:
      - 9901:80
    volumes:
      - ./home:/var/www
    networks:
      - microservices

  profile:
    container_name: profile-service
    hostname: profile.local
    build:
      context: .
      dockerfile: docker/profile/Dockerfile
    ports:
      - 9902:80
    volumes:
      - ./profile:/var/www
    networks:
      - microservices


  controlpanel:
    container_name: control-panel-service
    hostname: controlpanel.local
    build:
      context: .
      dockerfile: docker/control-panel/Dockerfile
    ports:
      - 9903:80
    volumes:
      - ./control-panel:/var/www
    networks:
      - microservices

  search:
    container_name: search-platform-service
    hostname: search.local
    build:
      context: .
      dockerfile: docker/search-platform/Dockerfile
    ports:
      - 9904:80
    volumes:
      - ./search-platform:/var/www
    networks:
      - microservices

  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    expose:
      - 7474
      - 7687
      - 6362
    environment:
      - NEO4J_AUTH=neo4j/abcde
    volumes:
      - neo4j:/data
      - ./docker/neo4j:/opt/project
    networks:
      - microservices

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6382:6379"
    networks:
      - microservices

volumes:
  neo4j:

networks:
  microservices:
    driver: "bridge"
